-- ===============================================
-- FINALISATION ENRICHISSEMENT CATALOGUE TSE
-- Version: 1.0
-- Date: 6 janvier 2025
-- Objectif: Finaliser l'enrichissement et activer les contraintes
-- ===============================================

-- RÃ©activer les contraintes
SET session_replication_role = DEFAULT;

-- ===============================================
-- 4. MISE Ã€ JOUR DES LOGOS PAR DÃ‰FAUT
-- ===============================================

-- Mettre Ã  jour les logos manquants avec le logo par dÃ©faut
UPDATE brands SET logo = '/images/brands/default.svg' 
WHERE logo IS NULL OR logo = '';

-- ===============================================
-- 5. VÃ‰RIFICATIONS ET STATISTIQUES
-- ===============================================

-- Compter les nouvelles marques ajoutÃ©es
SELECT 'Marques totales' as type, COUNT(*) as nombre FROM brands
UNION ALL
SELECT 'ModÃ¨les totaux' as type, COUNT(*) as nombre FROM models
UNION ALL
SELECT 'VÃ©hicules totaux' as type, COUNT(*) as nombre FROM vehicles;

-- Statistiques par marque
SELECT 
    b.nom as marque,
    COUNT(DISTINCT m.id) as nombre_modeles,
    COUNT(v.id) as nombre_vehicules
FROM brands b
LEFT JOIN models m ON b.id = m.brand_id
LEFT JOIN vehicles v ON m.id = v.model_id
GROUP BY b.nom, b.id
ORDER BY nombre_vehicules DESC, nombre_modeles DESC;

-- Statistiques par segment
SELECT 
    m.segment,
    COUNT(v.id) as nombre_vehicules,
    COUNT(DISTINCT m.id) as nombre_modeles
FROM models m
LEFT JOIN vehicles v ON m.id = v.model_id
GROUP BY m.segment
ORDER BY nombre_vehicules DESC;

-- Statistiques par carburant
SELECT 
    v.carburant,
    COUNT(*) as nombre_vehicules
FROM vehicles v
GROUP BY v.carburant
ORDER BY nombre_vehicules DESC;

-- Statistiques par annÃ©e
SELECT 
    v.annee,
    COUNT(*) as nombre_vehicules
FROM vehicles v
GROUP BY v.annee
ORDER BY v.annee DESC;

-- ===============================================
-- 6. VALIDATION DES DONNÃ‰ES
-- ===============================================

-- VÃ©rifier les modÃ¨les sans vÃ©hicules
SELECT 
    b.nom as marque,
    m.nom as modele,
    m.segment
FROM models m
JOIN brands b ON m.brand_id = b.id
LEFT JOIN vehicles v ON m.id = v.model_id
WHERE v.id IS NULL
ORDER BY b.nom, m.nom;

-- VÃ©rifier les vÃ©hicules avec donnÃ©es manquantes
SELECT 
    b.nom as marque,
    m.nom as modele,
    v.annee,
    v.couleur,
    CASE 
        WHEN v.puissance_cv IS NULL THEN 'Puissance manquante'
        WHEN v.consommation_l100km IS NULL THEN 'Consommation manquante'
        WHEN v.longueur_mm IS NULL THEN 'Dimensions manquantes'
        WHEN v.equipements IS NULL THEN 'Ã‰quipements manquants'
        ELSE 'DonnÃ©es complÃ¨tes'
    END as statut_donnees
FROM vehicles v
JOIN models m ON v.model_id = m.id
JOIN brands b ON m.brand_id = b.id
WHERE v.puissance_cv IS NULL 
   OR v.consommation_l100km IS NULL 
   OR v.longueur_mm IS NULL 
   OR v.equipements IS NULL
ORDER BY b.nom, m.nom, v.annee;

-- ===============================================
-- 7. CRÃ‰ATION D'INDEX POUR PERFORMANCE
-- ===============================================

-- Index pour les recherches par marque et modÃ¨le
CREATE INDEX IF NOT EXISTS idx_vehicles_brand_model 
ON vehicles USING btree (model_id);

-- Index pour les recherches par annÃ©e
CREATE INDEX IF NOT EXISTS idx_vehicles_annee 
ON vehicles USING btree (annee);

-- Index pour les recherches par carburant
CREATE INDEX IF NOT EXISTS idx_vehicles_carburant 
ON vehicles USING btree (carburant);

-- Index pour les recherches par segment
CREATE INDEX IF NOT EXISTS idx_models_segment 
ON models USING btree (segment);

-- Index pour les recherches par prix (pour les admins)
CREATE INDEX IF NOT EXISTS idx_vehicles_prix 
ON vehicles USING btree (prix) WHERE prix IS NOT NULL;

-- ===============================================
-- 8. MISE Ã€ JOUR DES MÃ‰TADONNÃ‰ES
-- ===============================================

-- Ajouter des commentaires aux tables pour documentation
COMMENT ON TABLE brands IS 'Table des marques automobiles avec informations de base';
COMMENT ON TABLE models IS 'Table des modÃ¨les de vÃ©hicules avec segmentation';
COMMENT ON TABLE vehicles IS 'Table des vÃ©hicules avec spÃ©cifications techniques complÃ¨tes';

-- Commentaires sur les colonnes importantes
COMMENT ON COLUMN vehicles.equipements IS 'Array des Ã©quipements de sÃ©rie du vÃ©hicule';
COMMENT ON COLUMN vehicles.autonomie_km IS 'Autonomie en km pour vÃ©hicules Ã©lectriques';
COMMENT ON COLUMN vehicles.autonomie_electrique_km IS 'Autonomie Ã©lectrique pour vÃ©hicules hybrides rechargeables';
COMMENT ON COLUMN vehicles.capacite_remorquage_kg IS 'CapacitÃ© de remorquage en kg pour pick-ups et SUV';

-- ===============================================
-- 9. RAPPORT FINAL D'ENRICHISSEMENT
-- ===============================================

SELECT '=== RAPPORT FINAL ENRICHISSEMENT CATALOGUE TSE ===' as rapport;

SELECT 
    'MARQUES' as categorie,
    COUNT(*) as total,
    COUNT(*) FILTER (WHERE annee_creation >= 2000) as modernes,
    COUNT(*) FILTER (WHERE pays_origine = 'Japon') as japonaises,
    COUNT(*) FILTER (WHERE pays_origine = 'Chine') as chinoises,
    COUNT(*) FILTER (WHERE pays_origine = 'Ã‰tats-Unis') as americaines,
    COUNT(*) FILTER (WHERE pays_origine IN ('Allemagne', 'France', 'SuÃ¨de', 'Roumanie')) as europeennes
FROM brands;

SELECT 
    'MODÃˆLES' as categorie,
    COUNT(*) as total,
    COUNT(*) FILTER (WHERE segment LIKE '%SUV%') as suv,
    COUNT(*) FILTER (WHERE segment LIKE '%Berline%') as berlines,
    COUNT(*) FILTER (WHERE segment = 'Citadine') as citadines,
    COUNT(*) FILTER (WHERE segment = 'Pick-up') as pickups,
    COUNT(*) FILTER (WHERE type_carrosserie = 'Hatchback') as hatchbacks
FROM models;

SELECT 
    'VÃ‰HICULES' as categorie,
    COUNT(*) as total,
    COUNT(*) FILTER (WHERE annee >= 2023) as recents,
    COUNT(*) FILTER (WHERE carburant = 'Ã‰lectrique') as electriques,
    COUNT(*) FILTER (WHERE carburant LIKE '%Hybride%') as hybrides,
    COUNT(*) FILTER (WHERE carburant = 'Essence') as essence,
    COUNT(*) FILTER (WHERE statut = 'Ã€ venir') as a_venir
FROM vehicles;

-- Message de confirmation
SELECT 
    'âœ… ENRICHISSEMENT TERMINÃ‰ AVEC SUCCÃˆS !' as message,
    'Le catalogue TSE contient maintenant les 100 modÃ¨les les plus populaires mondialement' as description,
    'Tous les vÃ©hicules respectent la stratÃ©gie de masquage des prix' as strategie,
    'Interface catalogue prÃªte pour utilisation' as statut;

-- ===============================================
-- 10. INSTRUCTIONS POST-ENRICHISSEMENT
-- ===============================================

SELECT '=== INSTRUCTIONS POST-ENRICHISSEMENT ===' as instructions;

SELECT 
    'Ã‰TAPES SUIVANTES' as etape,
    ARRAY[
        '1. Tester la navigation dans le catalogue enrichi',
        '2. VÃ©rifier que les prix restent masquÃ©s pour les visiteurs',
        '3. Configurer les prix dans le dashboard admin (/admin)',
        '4. Ajouter les images des vÃ©hicules via le backoffice',
        '5. Personnaliser les descriptions selon le marchÃ© ivoirien',
        '6. Configurer les statuts de disponibilitÃ©',
        '7. Tester les fonctionnalitÃ©s de contact et cotation'
    ] as actions_requises;

-- RequÃªte pour vÃ©rifier le bon fonctionnement
SELECT 
    'TEST NAVIGATION' as test,
    'SELECT * FROM brands ORDER BY nom' as requete_marques,
    'SELECT m.nom, b.nom as marque FROM models m JOIN brands b ON m.brand_id = b.id ORDER BY b.nom, m.nom' as requete_modeles,
    'SELECT COUNT(*) FROM vehicles WHERE statut IN (''Ã€ venir'', ''En cours d''''importation'')' as requete_vehicules;

-- Fin du script d'enrichissement
SELECT 
    'ðŸŽ‰ CATALOGUE TSE ENRICHI AVEC SUCCÃˆS !' as resultat,
    NOW() as date_completion,
    'PrÃªt pour utilisation avec interface Ã©purÃ©e' as statut_final;
